% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pub02_dataGettingFuncs.R
\name{TSFR.rptTSF_nextF}
\alias{TSFR.rptTSF_nextF}
\title{TSFR.rptTSF_nextF}
\usage{
TSFR.rptTSF_nextF(begT = as.Date("2007-12-31"),
  endT = as.Date("2016-12-31"), freq = "y", univ, funchar,
  refinePar = refinePar_default(), ...)
}
\arguments{
\item{funchar}{a tinysoft financial factor function string. Can be missing when ... arguments are passed, in this case, any 'gf.xx' function(not only financial factors) could be tested.}

\item{...}{argument for \code{\link[QDataGet]{getTSF}}.}
}
\value{
a \bold{TSFR} object,\code{date_end} represents next report date,\code{factorscore} represents factorscore of next report date.
}
\description{
TSFR.rptTSF_nextF
}
\examples{
begT <- as.Date("2007-12-31")
endT <- as.Date("2017-12-31")
univ <- "EI000985"
#- freq="y"
funchar <- '"factorscore",reportofall(9900100,RDate)' #ROE
funchar <- '"factorscore",reportofall(9900604,RDate)' #growth of net profit
funchar <- '"factorscore",reportofall(9900501,RDate)' #divdendyield
refinePar <- refinePar_default("none")
refinePar <- refinePar_default("scale_sec")
TSFR <- TSFR.rptTSF_nextF(begT,endT,freq="y",univ,funchar,refinePar)
#- freq="q"
funchar <- '"factorscore",LastQuarterData(RDate,9900604)'
TSFR <- TSFR.rptTSF_nextF(begT,endT,freq="q",univ,funchar,refinePar=refinePar_default("reg"))
#- funchar is missing
TSFR <- TSFR.rptTSF_nextF(begT,endT,freq="y",univ,factorFun='gf.PB_mrq', factorPar = list(fillna = TRUE))
}
