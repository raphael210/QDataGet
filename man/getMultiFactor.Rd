% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct01_frameBuildingFuncs.R
\name{getMultiFactor}
\alias{getMultiFactor}
\alias{getMultiFactorbyTSFs}
\alias{getRawMultiFactor}
\alias{MultiFactor2CombiFactor}
\alias{TSFs2mTSF}
\alias{mTSF2TSFs}
\title{get multiFactors}
\usage{
getMultiFactor(TS, FactorLists, wgts, silence = FALSE)

getMultiFactorbyTSFs(TSFs, wgts, factorNames = names(TSFs))

getRawMultiFactor(TS, FactorLists, name_suffix = FALSE)

MultiFactor2CombiFactor(mTSF, wgts, factorNames = guess_factorNames(mTSF),
  na_deal = c("ignore", "rm"), keep_single_factors = TRUE)

TSFs2mTSF(TSFs, factorNames = names(TSFs))

mTSF2TSFs(mTSF, factorNames = guess_factorNames(mTSF))
}
\arguments{
\item{FactorLists}{a list, with elements of FactorList(See detail in \code{\link{buildFactorList}}).}

\item{wgts}{a numeric vector with the same length of FactorLists(if the sum of wgts not equals to 1, the wgts will be rescaled to sum 1). If 'eq', \code{wgts <- rep(1/length(FactorLists),length(FactorLists))} ;If missing, then only return all the single-factor-scores, without the combined-factor-score.}

\item{TSFs}{a \bold{TSFs} object. see /code{/link{Model.TSFs}}}

\item{mTSF}{a dataframe of 'TS & MultiFactors'}
}
\value{
\code{getMultiFactor} return a \bold{mTSF} object including cols of all the single-factor-scores, and (if param \code{wgts} not missing) the \bold{raw} combined-factor-score .

\code{getMultiFactorbyTSFs} return a \bold{TSF} object including cols of all the single-factor-scores, and (if param \code{wgts} not missing) the \bold{raw} combi-factor-score, from a \bold{TSFs} list. (If param TSFs is a TSFRs object, then will return a TSFR object.)
}
\description{
get multiple single-factor-scores and the combined-factor-score.#'
}
\details{
Function \code{getMultiFactor} firstly get all the single-factor-scores and then calculating the weighted sum of them to get the combined-factor-score.
}
\note{
Function \code{getMultiFactor} not only could be used to get the "raw" combined-factor-score, but also could be used as the \code{"factorFun"} parametre in function \code{getTSF} to get the "clean and standardized" combined-factor-score. See more detail in the examples.
}
\examples{
# -- get multi-factor by FactorLists 
FactorLists <- list(
  buildFactorList(factorFun="gf.PE_ttm",
                  factorPar=list(),
                  factorDir=-1),
  buildFactorList(factorFun="gf.pct_chg_per",
                  factorPar=list(N=20),
                  factorDir=-1),
  buildFactorList(factorFun="gf.pct_chg_per",
                  factorPar=list(N=60),
                  factorDir=-1),       
  buildFactorList(factorFun="gf.pct_chg_per",
                  factorPar=list(N=120),
                  factorDir=-1))
wgts <- c(0.25,0.25,0.25,0.25)

# -- 0. get the all the single-factor-scores
TSF <- getMultiFactor(TS,FactorLists)

# -- 1. get the "raw" combined-factor-score
TSF.multi <- getMultiFactor(TS,FactorLists,wgts)

# -- 2. get the "clean and standardized" combined-factor-score
# --- 2.1 by \\code{getTSF}
TSF.multi2 <- getTSF(TS,factorFun="getMultiFactor",factorPar=list(FactorLists,wgts),factorRefine=refinePar_default("scale"))
# --- 2.2 by \\code{Model.TSF}
modelPar <- modelPar.factor(modelPar.default(),factorFun="getMultiFactor",factorPar=list(FactorLists,wgts),factorRefine=refinePar_default("scale"))
TSF.multi3 <- Model.TSF(modelPar)
TSF.multi4 <- Model.TSF_byTS(modelPar, TS)
# -- get multi-factor by TSFs 
MPs <- getMPs_FactorLists(FactorLists, modelPar.default())
TSFs <- Model.TSFs(MPs)
TSF.multi5 <- getMultiFactorbyTSFs(TSFs,wgts)
#-- TSFs2mTSF
mTSF <- TSFs2mTSF(TSFs)
mTSFR <- TSFs2mTSF(TSFRs)
#-- mTSF2TSFs
TSFs <- mTSF2TSFs(mTSF)
TSFRs <- mTSF2TSFs(mTSFR)
}
